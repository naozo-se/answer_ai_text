import * as React from 'react';
import { Stack, Box, Typography, Card, CardMedia } from '@mui/material';

// --- 親コンポーネントで isMobile を判定し、子に渡すことを想定 ---

// サンプルのデータ
const itemData = {
  image: "https://images.unsplash.com/photo-1551963831-b3b1ca40c98e",
  title: "美味しい朝食",
  description: "焼きたてのパンと新鮮なフルーツで、素晴らしい一日を始めましょう。コーヒーとの相性も抜群です。",
};

/**
 * 画像と説明を表示するコンポーネント
 * @param {object} props
 * @param {boolean} props.isMobile - モバイル表示かどうかのフラグ
 */
const ItemCard = ({ isMobile }) => {
  return (
    <Card sx={{ maxWidth: 800, width: '100%' }}>
      <Stack
        // isMobile の値に応じて、並べる方向を動的に変更
        direction={isMobile ? 'column' : 'row'}
        spacing={2} // 要素間のスペース
      >
        {/* 画像エリア */}
        <Box sx={{
          // PC表示(row)のときは幅50%、モバイル表示(column)のときは幅100%
          width: isMobile ? '100%' : '50%',
          // アスペクト比を保ちつつ、Boxいっぱいに表示
          aspectRatio: '16/9',
        }}>
          <CardMedia
            component="img"
            image={itemData.image}
            alt={itemData.title}
            sx={{ width: '100%', height: '100%', objectFit: 'cover' }}
          />
        </Box>

        {/* テキスト説明エリア */}
        <Box sx={{
          // PC表示(row)のときは幅50%
          width: isMobile ? '100%' : '50%',
          p: 2, // 内側の余白
          display: 'flex',
          flexDirection: 'column',
          justifyContent: 'center',
        }}>
          <Typography gutterBottom variant="h5" component="div">
            {itemData.title}
          </Typography>
          <Typography variant="body2" color="text.secondary">
            {itemData.description}
          </Typography>
        </Box>
      </Stack>
    </Card>
  );
};

export default ItemCard;
